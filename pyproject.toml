[tool.poetry]
name = "portfolio"
version = "0.0.2"
description = ""
authors = ["Ramakant <jogi.ramakant94@gmail.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
Django = "^5.0.6"
pillow = "^10.3.0"

django-debug-toolbar = "*"
django-extensions = "^3.2.3"
celery = "^5.4.0"
django-environ = "^0.11.2"
whitenoise = "^6.6.0"
google-api-python-client = "^2.128.0"
google-auth-httplib2 = "^0.2.0"
google-auth-oauthlib = "^1.2.0"
pyjwt = "^2.8.0"
cryptography = "^42.0.7"
bumpver = "^2023.1129"
psycopg2-binary = "^2.9.9"
dj-user-login-history = "^1.0.5"
mypy = "^1.10.0"
django-tables2 = "^2.7.0"
django-schema-graph = "^3.1.0"
django-easy-audit = "^1.3.6"

[tool.poetry.group.dev.dependencies]
black = "*"
bumpver = "*"
flake8 = "*"
coverage = "*"
django-coverage-plugin = "*"
appmap = {version = "^2.0.7", allow-prereleases = true}

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pyright]
# See: https://github.com/microsoft/pyright/blob/main/docs/configuration.md
exclude=["**/__pycache__"]
include=["app", "config", "libs"]
pythonVersion="3.11.3"
reportMissingImports = true
reportMissingTypeStubs = false
reportLibraryCodeForTypes = true
typeChecking = "basic"
venvPath = "./.venv"

# ==== pytest ====
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--ds=config.settings.test --reuse-db --import-mode=importlib"
python_files = [
    "tests.py",
    "test_*.py",
]

[tool.black]
line-length = 120
target_version = ['py38']

[tool.bumpver]
current_version = "0.0.2"
version_pattern = "MAJOR.MINOR.PATCH[PYTAGNUM]"
commit_message = "Bump version {old_version} -> {new_version}"
commit = true
tag = true
push = false

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    'current_version = "{version}"',
    'version = "{version}"',
]
"app/__init__.py" = [
    "{version}",
    "{pep440_version}",
]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "*/migrations/*.py",
    "staticfiles/*"
]

# ==== Coverage ====
[tool.coverage.run]
include = ["portfolio/**"]
omit = ["*/migrations/*", "*/tests/*"]
plugins = ["django_coverage_plugin"]

[[tool.mypy.overrides]]
# Django migrations should not produce any errors:
module = "*.migrations.*"
ignore_errors = true

# ==== djLint ====
[tool.djlint]
blank_line_after_tag = "load,extends"
close_void_tags = true
format_css = true
format_js = true
# TODO: remove T002 when fixed https://github.com/djlint/djLint/issues/687
ignore = "H006,H030,H031,T002"
include = "H017,H035"
indent = 2
max_line_length = 119
profile = "django"

[tool.djlint.css]
indent_size = 2

[tool.djlint.js]
indent_size = 2

## ==== mypy ====
#[tool.mypy]
#python_version = "3.12"
#check_untyped_defs = true
#ignore_missing_imports = true
#warn_unused_ignores = true
#warn_redundant_casts = true
#warn_unused_configs = true
#plugins = [
#    "mypy_django_plugin.main",
#    "mypy_drf_plugin.main",
#]

[tool.django-stubs]
django_settings_module = "config.settings.test"
